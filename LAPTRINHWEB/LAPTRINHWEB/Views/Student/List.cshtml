@model List<LAPTRINHWEB.Models.Student>

@{
    ViewData["Title"] = "Danh sách đăng ký chuyên ngành";
    var stats = ViewBag.Stats;
    var totalStudents = ViewBag.TotalStudents;
    var selectedChuyenNganh = ViewBag.SelectedChuyenNganh;

    Dictionary<string, string> chuyenNganhMapping = new Dictionary<string, string>
    {
        {"CNPM", "Công nghệ phần mềm"},
        {"HTTT", "Hệ thống thông tin"},
        {"ANM", "An ninh mạng"},
        {"TTNT", "Trí tuệ nhân tạo"},
        {"MMT", "Mạng máy tính"}
    };

    Dictionary<string, string> iconMapping = new Dictionary<string, string>
    {
        {"CNPM", "💻"},
        {"HTTT", "📊"},
        {"ANM", "🔒"},
        {"TTNT", "🤖"},
        {"MMT", "🌐"}
    };

    Dictionary<string, string> colorMapping = new Dictionary<string, string>
    {
        {"CNPM", "#667eea"},
        {"HTTT", "#f093fb"},
        {"ANM", "#fa709a"},
        {"TTNT", "#4facfe"},
        {"MMT", "#43e97b"}
    };
}

<style>
    .page-header {
        background: linear-gradient(135deg, #1e3a8a 0%, #3b82f6 100%);
        color: white;
        padding: 40px 0;
        margin-bottom: 40px;
        text-align: center;
    }

        .page-header h1 {
            font-size: 2.5rem;
            font-weight: bold;
            margin-bottom: 10px;
        }

    .stats-cards {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin-bottom: 40px;
    }

    .stat-card {
        background: white;
        border-radius: 15px;
        padding: 20px;
        text-align: center;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        cursor: pointer;
        position: relative;
        overflow: hidden;
    }

        .stat-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 5px;
            background: linear-gradient(to right, var(--color), var(--color-dark));
        }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
        }

        .stat-card.active {
            background: linear-gradient(135deg, var(--color) 0%, var(--color-dark) 100%);
            color: white;
        }

    .stat-icon {
        font-size: 2.5rem;
        margin-bottom: 10px;
    }

    .stat-count {
        font-size: 2rem;
        font-weight: bold;
        margin-bottom: 5px;
    }

    .stat-label {
        font-size: 1.1rem;
        margin-bottom: 5px;
    }

    .stat-avg {
        font-size: 0.9rem;
        opacity: 0.8;
    }

    .filter-section {
        background: white;
        border-radius: 15px;
        padding: 25px;
        margin-bottom: 30px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
    }

    .filter-buttons {
        display: flex;
        gap: 15px;
        flex-wrap: wrap;
        justify-content: center;
    }

    .filter-btn {
        padding: 10px 20px;
        border: 2px solid #e5e7eb;
        border-radius: 50px;
        background: white;
        color: #6b7280;
        font-weight: 500;
        transition: all 0.3s ease;
        text-decoration: none;
    }

        .filter-btn:hover {
            border-color: #3b82f6;
            color: #3b82f6;
            transform: translateY(-2px);
        }

        .filter-btn.active {
            background: #3b82f6;
            color: white;
            border-color: #3b82f6;
        }

    .students-table {
        background: white;
        border-radius: 15px;
        overflow: hidden;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
    }

    .table {
        margin: 0;
    }

        .table thead {
            background: linear-gradient(135deg, #f3f4f6 0%, #e5e7eb 100%);
        }

        .table th {
            border: none;
            padding: 20px;
            font-weight: 600;
            color: #374151;
            text-transform: uppercase;
            font-size: 0.9rem;
            letter-spacing: 0.5px;
        }

        .table td {
            padding: 20px;
            vertical-align: middle;
            border: none;
            border-bottom: 1px solid #f3f4f6;
        }

        .table tbody tr:hover {
            background-color: #f9fafb;
        }

        .table tbody tr:last-child td {
            border-bottom: none;
        }

    .major-badge {
        display: inline-block;
        padding: 8px 16px;
        border-radius: 20px;
        font-size: 0.9rem;
        font-weight: 500;
        color: white;
    }

    .score-badge {
        display: inline-block;
        padding: 5px 12px;
        border-radius: 15px;
        font-weight: 600;
    }

    .score-excellent {
        background: #10b981;
        color: white;
    }

    .score-good {
        background: #3b82f6;
        color: white;
    }

    .score-average {
        background: #f59e0b;
        color: white;
    }

    .score-below {
        background: #ef4444;
        color: white;
    }

    .empty-state {
        text-align: center;
        padding: 60px 20px;
        color: #6b7280;
    }

        .empty-state i {
            font-size: 4rem;
            color: #e5e7eb;
            margin-bottom: 20px;
        }

    .action-button {
        display: inline-block;
        background: linear-gradient(to right, #3498db, #2980b9);
        color: white;
        padding: 12px 30px;
        border-radius: 50px;
        text-decoration: none;
        font-weight: 500;
        transition: all 0.3s ease;
        margin-top: 20px;
    }

        .action-button:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 20px rgba(52, 152, 219, 0.4);
            color: white;
            text-decoration: none;
        }

    @@media (max-width: 768px) {
        .stats-cards {
            grid-template-columns: 1fr;
        }

        .filter-buttons {
            flex-direction: column;
            align-items: stretch;
        }

        .table {
            font-size: 0.9rem;
        }

            .table th,
            .table td {
                padding: 12px 8px;
            }
    }
</style>

<!-- Page Header -->
<div class="page-header">
    <div class="container">
        <h1><i class="fas fa-users"></i> Danh sách sinh viên đăng ký</h1>
        <p>Tổng số: @totalStudents sinh viên đã đăng ký</p>
    </div>
</div>

<div class="container">
    <!-- Stats Cards -->
    <div class="stats-cards">
        @foreach (var stat in stats)
        {
            var chuyenNganh = stat.ChuyenNganh.ToString();
            var tenChuyenNganh = chuyenNganhMapping.ContainsKey(chuyenNganh) ? chuyenNganhMapping[chuyenNganh] : chuyenNganh;
            var icon = iconMapping.ContainsKey(chuyenNganh) ? iconMapping[chuyenNganh] : "📚";
            var color = colorMapping.ContainsKey(chuyenNganh) ? colorMapping[chuyenNganh] : "#6b7280";
            var isActive = selectedChuyenNganh == chuyenNganh;

            <a href="@Url.Action("List", new { chuyenNganh = chuyenNganh })"
               class="stat-card @(isActive ? "active" : "")"
               style="--color: @color; --color-dark: @color;">
                <div class="stat-icon">@icon</div>
                <div class="stat-count">@stat.Count</div>
                <div class="stat-label">@tenChuyenNganh</div>
                <div class="stat-avg">Điểm TB: @stat.AvgScore.ToString("F2")</div>
            </a>
        }
    </div>

    <!-- Filter Section -->
    <div class="filter-section">
        <h3 class="text-center mb-4">Lọc theo chuyên ngành</h3>
        <div class="filter-buttons">
            <a href="@Url.Action("List")"
               class="filter-btn @(string.IsNullOrEmpty(selectedChuyenNganh) ? "active" : "")">
                <i class="fas fa-th"></i> Tất cả
            </a>
            @foreach (var major in chuyenNganhMapping)
            {
                <a href="@Url.Action("List", new { chuyenNganh = major.Key })"
                   class="filter-btn @(selectedChuyenNganh == major.Key ? "active" : "")">
                    @iconMapping[major.Key] @major.Value
                </a>
            }
        </div>
    </div>

    <!-- Students Table -->
    @if (Model.Count > 0)
    {
        <div class="students-table">
            <table class="table">
                <thead>
                    <tr>
                        <th>STT</th>
                        <th>MSSV</th>
                        <th>Họ và tên</th>
                        <th>Điểm TB</th>
                        <th>Chuyên ngành</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        int stt = 1;
                    }
                    @foreach (var student in Model)
                    {
                        var chuyenNganh = student.ChuyenNganh;
                        var tenChuyenNganh = chuyenNganhMapping.ContainsKey(chuyenNganh) ? chuyenNganhMapping[chuyenNganh] : chuyenNganh;
                        var color = colorMapping.ContainsKey(chuyenNganh) ? colorMapping[chuyenNganh] : "#6b7280";

                        string scoreClass = "";
                        if (student.DiemTB >= 8.5) scoreClass = "score-excellent";
                        else if (student.DiemTB >= 7.0) scoreClass = "score-good";
                        else if (student.DiemTB >= 5.0) scoreClass = "score-average";
                        else scoreClass = "score-below";

                        <tr>
                            <td>@stt</td>
                            <td>@student.MSSV</td>
                            <td>@student.HoTen</td>
                            <td>
                                <span class="score-badge @scoreClass">@student.DiemTB</span>
                            </td>
                            <td>
                                <span class="major-badge" style="background: @color;">
                                    @iconMapping[chuyenNganh] @tenChuyenNganh
                                </span>
                            </td>
                        </tr>
                        stt++;
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="empty-state">
            <i class="fas fa-inbox"></i>
            <h3>Chưa có sinh viên nào đăng ký</h3>
            <p>Hãy là người đầu tiên đăng ký chuyên ngành!</p>
            <a href="@Url.Action("Index")" class="action-button">
                <i class="fas fa-user-plus"></i> Đăng ký ngay
            </a>
        </div>
    }

    <!-- Action Buttons -->
    <div class="text-center mt-5">
        <a href="@Url.Action("Index")" class="action-button">
            <i class="fas fa-user-plus"></i> Đăng ký mới
        </a>
    </div>
</div>

@section Scripts {
    <script>
        // Animate stats cards on page load
        document.addEventListener('DOMContentLoaded', function() {
            const cards = document.querySelectorAll('.stat-card');
            cards.forEach((card, index) => {
                setTimeout(() => {
                    card.style.animation = 'fadeInUp 0.5s ease forwards';
                }, index * 100);
            });
        });

        // Add animation keyframes
        const style = document.createElement('style');
        style.textContent = `
            @@keyframes fadeInUp {
                from {
                    opacity: 0;
                    transform: translateY(20px);
                }
                to {
                    opacity: 1;
                    transform: translateY(0);
                }
            }
        `;
        document.head.appendChild(style);
    </script>
}