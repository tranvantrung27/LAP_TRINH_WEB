// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LAPTRINHWEB.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250605064250_UpdateSinhVienTable")]
    partial class UpdateSinhVienTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LAPTRINHWEB.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Nguyễn Nhật Ánh",
                            CategoryId = 1,
                            Description = "Một cuốn sách hay về tuổi thơ và những kỷ niệm đẹp",
                            Image = "books/tuoitho.jpg",
                            Price = 50000m,
                            Title = "Cho tôi xin một vé đi tuổi thơ"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Tô Lê Xuân Việt",
                            CategoryId = 2,
                            Description = "Hướng dẫn lập trình C# từ cơ bản đến nâng cao",
                            Price = 120000m,
                            Title = "Lập trình C#"
                        });
                });

            modelBuilder.Entity("LAPTRINHWEB.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Cuộc sống"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Lập trình"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Sức Khỏe"
                        });
                });

            modelBuilder.Entity("LAPTRINHWEB.Models.ChiTietDangKy", b =>
                {
                    b.Property<int>("MaDK")
                        .HasColumnType("int");

                    b.Property<string>("MaHP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("DangKyMaDK")
                        .HasColumnType("int");

                    b.Property<string>("HocPhanMaHP")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaDK", "MaHP");

                    b.HasIndex("DangKyMaDK");

                    b.HasIndex("HocPhanMaHP");

                    b.HasIndex("MaHP");

                    b.ToTable("ChiTietDangKys");
                });

            modelBuilder.Entity("LAPTRINHWEB.Models.DangKy", b =>
                {
                    b.Property<int>("MaDK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDK"));

                    b.Property<string>("MaSV")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayDK")
                        .HasColumnType("datetime2");

                    b.HasKey("MaDK");

                    b.HasIndex("MaSV");

                    b.ToTable("DangKys");
                });

            modelBuilder.Entity("LAPTRINHWEB.Models.HocPhan", b =>
                {
                    b.Property<string>("MaHP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SoTinChi")
                        .HasColumnType("int");

                    b.Property<string>("TenHP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaHP");

                    b.ToTable("HocPhans");
                });

            modelBuilder.Entity("LAPTRINHWEB.Models.NganhHoc", b =>
                {
                    b.Property<string>("MaNganh")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenNganh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNganh");

                    b.ToTable("NganhHocs");
                });

            modelBuilder.Entity("LAPTRINHWEB.Models.SinhVien", b =>
                {
                    b.Property<string>("MaSV")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaNganh")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.HasKey("MaSV");

                    b.HasIndex("MaNganh");

                    b.ToTable("SinhVien", (string)null);
                });

            modelBuilder.Entity("LAPTRINHWEB.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LAPTRINHWEB.Models.Book", b =>
                {
                    b.HasOne("LAPTRINHWEB.Models.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("LAPTRINHWEB.Models.ChiTietDangKy", b =>
                {
                    b.HasOne("LAPTRINHWEB.Models.DangKy", null)
                        .WithMany("ChiTietDangKys")
                        .HasForeignKey("DangKyMaDK");

                    b.HasOne("LAPTRINHWEB.Models.HocPhan", null)
                        .WithMany("ChiTietDangKys")
                        .HasForeignKey("HocPhanMaHP");

                    b.HasOne("LAPTRINHWEB.Models.DangKy", "DangKy")
                        .WithMany()
                        .HasForeignKey("MaDK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LAPTRINHWEB.Models.HocPhan", "HocPhan")
                        .WithMany()
                        .HasForeignKey("MaHP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DangKy");

                    b.Navigation("HocPhan");
                });

            modelBuilder.Entity("LAPTRINHWEB.Models.DangKy", b =>
                {
                    b.HasOne("LAPTRINHWEB.Models.SinhVien", "SinhVien")
                        .WithMany()
                        .HasForeignKey("MaSV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SinhVien");
                });

            modelBuilder.Entity("LAPTRINHWEB.Models.SinhVien", b =>
                {
                    b.HasOne("LAPTRINHWEB.Models.NganhHoc", "NganhHoc")
                        .WithMany()
                        .HasForeignKey("MaNganh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NganhHoc");
                });

            modelBuilder.Entity("LAPTRINHWEB.Models.Category", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("LAPTRINHWEB.Models.DangKy", b =>
                {
                    b.Navigation("ChiTietDangKys");
                });

            modelBuilder.Entity("LAPTRINHWEB.Models.HocPhan", b =>
                {
                    b.Navigation("ChiTietDangKys");
                });
#pragma warning restore 612, 618
        }
    }
}
